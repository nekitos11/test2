{
  "extends": [
    "react-app",
    "prettier"
  ],
  "plugins": [
    "prettier"
  ],
  "rules": {
    "react-hooks/exhaustive-deps": 0,
    "curly": [
      "off"
    ],
    // убирает уведомление "{ " after if
    "prettier/prettier": [
      "warn"
    ],
    "import/order": [
      "warn",
      {
        "groups": [
          "builtin",
          "external",
          "parent",
          "sibling",
          "index",
          "object",
          "type"
        ],
        "pathGroups": [
          {
            "pattern": "@/**/**",
            "group": "parent",
            "position": "before"
          }
        ],
        "alphabetize": {
          "order": "asc"
        }
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/no-non-null-assertion": 0,
    "@typescript-eslint/no-unused-vars": 0,
    "@typescript-eslint/ban-ts-comment": 0,
    "jsx-a11y/click-events-have-key-events": 0,
    "jsx-a11y/no-static-element-interactions": 0,
    "@typescript-eslint/no-var-requires": 0,
    "import/prefer-default-export": 0,
    "import/no-extraneous-dependencies": 0,
    "react/require-default-props": 0,
    "react/jsx-props-no-spreading": 0,
    "react/no-unescaped-entities": 0,
    "react/no-array-index-key": 0,
    "react/prop-types": 0,
    "react/react-in-jsx-scope": 0,
    "react/no-unused-prop-types": 0,
    "react/destructuring-assignment": 0,
    "consistent-return": 0,
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-unused-vars": "warn",
    "padding-line-between-statements": [
      "warn",
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "multiline-const",
          "multiline-let",
          "multiline-var"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "multiline-const",
          "multiline-let",
          "multiline-var"
        ],
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "multiline-expression"
      },
      {
        "blankLine": "always",
        "prev": "multiline-expression",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      }
    ],
    "semi": [
      "warn",
      "always"
    ]
  },
  "ignorePatterns": [
    "src/**/*.test.ts",
    "src/**/*.woff",
    "src/**/*.ttf",
    "src/**/*.png",
    "src/**/*.eot",
    "src/**/*.css",
    "src/**/*.scss"
  ]
}
